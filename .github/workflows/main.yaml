name: CI/CD EVENTARRY INVITATION SVC
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Build Docker image
    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.NAME }}:latest .

    # Push Docker image to Docker Hub
    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.NAME }}:latest
  
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    timeout-minutes: 60
    steps:
      # SSH into server and deploy
    - name: Deploy on Server
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        passphrase: ${{ secrets.PASSPHRASE }}
        key: ${{ secrets.KEY }}
        script: |
          # Stop and remove the existing container (if any)
          docker stop ${{ secrets.NAME }} || true
          docker rm ${{ secrets.NAME }} || true
          
          # Pull the latest image
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.NAME }}:latest
          
          # Run the new container
          docker run -d --name ${{ secrets.NAME }} --memory 512m \
          --env-file ${{ secrets.SECRET_SERVICE }}/.env \
          --memory-reservation 256m \
          --network main \
          --restart unless-stopped \
          -e PORT=8888 \
          -p 8888:8888 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.NAME }}:latest
